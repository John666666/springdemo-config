server:
  port: 8080

spring:
  application:
    name: zuul-gateway
#  boot:
#    admin:
#      url: http://localhost:80

eureka:
  client:
    serviceUrl:
      defaultZone: http://peer1:8781/eureka/
    registry-fetch-interval-seconds: 5
  instance:
    prefer-ip-address: true #配置Eureka
    instance-id: ${spring.application.name}:${spring.application.instance_id:${server.port}}
    metadata-map:
      management:
        context-path: /monitor
        port: 8898

zuul:
  routes:
    calc-service: #通过path+serviceId的方式，这种适合配置参数比较多的情况（route的名字可以任意）
      path: /calc-service/**  #匹配访问地址，访问地址如果可以匹配，则自动代理到对应的微服务
      serviceId: microserver-calc   #必须是有效的微服务名称
#    microserver-calc: /calcs-direct/**  #直接通过服务名配置代理（必须是有效的服务名），所有访问/microserver-calc-direct/**的地址都会被代理到microserver-calc这个微服务
    microserver-calc:   #给指定服务配置前缀(这里的服务名称必须是真实的服务名，eureka或者手动用ribbon配置的名称)
      path: /calc/**    #指定访问microserver-calc服务的前缀是/calc
      strip-prefix: false
  prefix: /api
#  strip-prefix: true

#hystrix:
#  command:
#    microserver-calc:
#      execution:
#        isolation:
#          thread:
#            timeoutInMilliseconds: 2000


microserver-calc:
  ribbon:
    ConnectionTimeout: 500
    ReadTimeout: 2000

management:
  security:
    enabled: false  #关掉安全认证
  port: 8898  #管理端口调整成8888,独立的端口可以做安全控制
  context-path: /monitor  #actuator的访问路径
#  address: localhost
endpoints:
  enabled: true
  beans:
    enabled: true
    sensitive: false




